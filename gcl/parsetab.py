
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFFIDOODleftSEMICOLONnonassocARROWASSIGNnonassocCOMMAleftPLUSMINUSleftTIMESDIVIDEABORT ARROW ASSIGN COMMA DIVIDE DO FI IF LPAREN MINUS NUMBER OD OR PLUS RPAREN SEMICOLON SKIP TIMES VARIABLEstatement : SKIP\n                | ABORT statement : variables ASSIGN expressionsstatement : IF contents FIstatement : DO contents ODstatement : statementsstatements : statement SEMICOLON statementcontent : expression ARROW statementcontents : contentcontents : content OR contentsvariables : VARIABLEvariables : VARIABLE COMMA variablesexpressions : expressionexpressions : expression COMMA expressionsexpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression TIMES expression\n\t\t\t\t| expression DIVIDE expression\n\texpression : NUMBER \n\t\t\t\t| VARIABLEexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'SEMICOLON':([1,4,6,7,10,11,22,28,29,30,31,33,34,35,36,37,38,40,],[-1,-6,17,-2,-20,-19,-5,-4,-7,-13,-3,-21,-16,17,-15,-17,-18,-14,]),'VARIABLE':([0,3,5,9,13,17,18,20,23,24,25,26,27,39,],[2,10,10,2,10,2,10,10,10,2,10,10,10,10,]),'RPAREN':([10,11,21,33,34,36,37,38,],[-20,-19,33,-21,-16,-15,-17,-18,]),'MINUS':([10,11,15,21,30,33,34,36,37,38,],[-20,-19,23,23,23,-21,-16,-15,-17,-18,]),'OD':([1,4,7,10,11,12,14,22,28,29,30,31,32,33,34,35,36,37,38,40,],[-1,-6,-2,-20,-19,-9,22,-5,-4,-7,-13,-3,-10,-21,-16,-8,-15,-17,-18,-14,]),'NUMBER':([3,5,13,18,20,23,25,26,27,39,],[11,11,11,11,11,11,11,11,11,11,]),'DO':([0,17,24,],[3,3,3,]),'ARROW':([10,11,15,33,34,36,37,38,],[-20,-19,24,-21,-16,-15,-17,-18,]),'ASSIGN':([2,8,19,],[-11,18,-12,]),'TIMES':([10,11,15,21,30,33,34,36,37,38,],[-20,-19,26,26,26,-21,26,26,-17,-18,]),'$end':([1,4,6,7,10,11,22,28,29,30,31,33,34,36,37,38,40,],[-1,-6,0,-2,-20,-19,-5,-4,-7,-13,-3,-21,-16,-15,-17,-18,-14,]),'OR':([1,4,7,10,11,12,22,28,29,30,31,33,34,35,36,37,38,40,],[-1,-6,-2,-20,-19,20,-5,-4,-7,-13,-3,-21,-16,-8,-15,-17,-18,-14,]),'SKIP':([0,17,24,],[1,1,1,]),'LPAREN':([3,5,13,18,20,23,25,26,27,39,],[13,13,13,13,13,13,13,13,13,13,]),'IF':([0,17,24,],[5,5,5,]),'ABORT':([0,17,24,],[7,7,7,]),'COMMA':([2,10,11,30,33,34,36,37,38,],[9,-20,-19,39,-21,-16,-15,-17,-18,]),'PLUS':([10,11,15,21,30,33,34,36,37,38,],[-20,-19,25,25,25,-21,-16,-15,-17,-18,]),'FI':([1,4,7,10,11,12,16,22,28,29,30,31,32,33,34,35,36,37,38,40,],[-1,-6,-2,-20,-19,-9,28,-5,-4,-7,-13,-3,-10,-21,-16,-8,-15,-17,-18,-14,]),'DIVIDE':([10,11,15,21,30,33,34,36,37,38,],[-20,-19,27,27,27,-21,27,27,-17,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'contents':([3,5,20,],[14,16,32,]),'statement':([0,17,24,],[6,29,35,]),'statements':([0,17,24,],[4,4,4,]),'expressions':([18,39,],[31,40,]),'variables':([0,9,17,24,],[8,19,8,8,]),'expression':([3,5,13,18,20,23,25,26,27,39,],[15,15,21,30,15,34,36,37,38,30,]),'content':([3,5,20,],[12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> SKIP','statement',1,'p_statement_one','gcl_yacc.py',19),
  ('statement -> ABORT','statement',1,'p_statement_one','gcl_yacc.py',20),
  ('statement -> variables ASSIGN expressions','statement',3,'p_statement_assign','gcl_yacc.py',25),
  ('statement -> IF contents FI','statement',3,'p_statement_if','gcl_yacc.py',29),
  ('statement -> DO contents OD','statement',3,'p_statement_do','gcl_yacc.py',33),
  ('statement -> statements','statement',1,'p_statement_statements','gcl_yacc.py',37),
  ('statements -> statement SEMICOLON statement','statements',3,'p_statements_concat','gcl_yacc.py',41),
  ('content -> expression ARROW statement','content',3,'p_content_guard','gcl_yacc.py',48),
  ('contents -> content','contents',1,'p_contents_one','gcl_yacc.py',52),
  ('contents -> content OR contents','contents',3,'p_contents','gcl_yacc.py',56),
  ('variables -> VARIABLE','variables',1,'p_variables_one','gcl_yacc.py',63),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','gcl_yacc.py',67),
  ('expressions -> expression','expressions',1,'p_expressions_one','gcl_yacc.py',71),
  ('expressions -> expression COMMA expressions','expressions',3,'p_expressions','gcl_yacc.py',75),
  ('expression -> expression PLUS expression','expression',3,'p_expression','gcl_yacc.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_expression','gcl_yacc.py',83),
  ('expression -> expression TIMES expression','expression',3,'p_expression','gcl_yacc.py',84),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','gcl_yacc.py',85),
  ('expression -> NUMBER','expression',1,'p_expression_one','gcl_yacc.py',90),
  ('expression -> VARIABLE','expression',1,'p_expression_one','gcl_yacc.py',91),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','gcl_yacc.py',95),
]
