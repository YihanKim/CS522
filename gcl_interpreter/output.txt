# test 0 : abort, skip
# 0-1. abort
abort 문이 실행되었습니다.
# error

# 0-2. skip
{}
# none


# test 1 : assignment
# 1-1. single assign
{'v': 1}
# as you see

# 1-2. two variable
{'b': 3, 'a': 2}
# as you see

# 1-3. four variable
{'ben': 4848, 'carl': 85912389548932, 'ash': 12893892189, 'dave': 1}
# as you see

# 1-4. assign with ariethmetic
{'u': 5, 't': 5, 'v': 6}
# t = 5, u = 5, v = 6

# test 2 : concatenation
# 2-1. concatenate two statements
{'y': 2, 'x': 1}
# as you see

# 2-2. concatenate multiple statements(chain)
{'z': 7, 'y': 4, 'x': 3}
# x = 3, y = 4, z = 7

# test 3 : if statement
# 3-1. base case
abort 문이 실행되었습니다.
# error

# 3-2. single predicate & consequent statement 
{'y': 1, 'x': 1}
# x = 1, y = 1

# 3-3. multiple predicates 
{'z': 18, 'y': 13, 'x': 15}
# only one of three will increases, otherwise it decreases

# test 4 : do statement
# 4-1. base case
{}
# none

# 4-2. multiple predicates
{'z': 0, 'y': 5, 'x': -1}
# run until single elem is remained

# test 5 : real algorithms(max, euclidean)
# 5-1. finding max algorithm
{'b': 15, 'm': 15, 'a': 7}
# m = 15, a = 7, b = 15

# 5-2. extended euclidean algorithm
{'u': 0, 'q': 2, 'a': 6, 'r': 0, 'b': 0, 'y': 0, 'v': 0, 'x': 0}
# b = 0, a = 6

# test 6 : boolean features
{'z': 0, 'y': 2, 'x': 1}
{'z': 1, 'y': 2, 'x': 1}
{'z': 1, 'y': 43, 'x': 15}
{'z': 1, 'y': 0, 'x': 1}
{'z': 1}

